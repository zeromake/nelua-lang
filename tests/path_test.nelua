local path = require 'path'
require 'nester'

nester.describe("path", function()
    nester.it("basename", function()
        expect.equal(path.basename("path.nelua"), "path.nelua")
        expect.equal(path.basename("path.nelua", false), "path")
        expect.equal(path.basename(".nelua", false), "")
        expect.equal(path.basename("nelua", false), "nelua")
        expect.equal(path.basename("file.js.old", false), "file.js")
        expect.equal(path.basename(""), "")
        expect.equal(path.basename("/dir/basename.ext"), "basename.ext")
        expect.equal(path.basename("/basename.ext"), "basename.ext")
        expect.equal(path.basename("basename.ext"), "basename.ext")
        expect.equal(path.basename("basename.ext/"), "basename.ext")
        expect.equal(path.basename("basename.ext//"), "basename.ext")
    end)
    nester.it("win32.basename", function()
        expect.equal(path.win32.basename("\\dir\\basename.ext"), "basename.ext")
        expect.equal(path.win32.basename("\\basename.ext"), "basename.ext")
        expect.equal(path.win32.basename("basename.ext"), "basename.ext")
        expect.equal(path.win32.basename("basename.ext\\\\"), "basename.ext")
        expect.equal(path.win32.basename("foo"), "foo")
        expect.equal(path.win32.basename("aaa\\bbb"), "bbb")
        expect.equal(path.win32.basename("aaa\\bbb\\\\\\\\"), "bbb")
        expect.equal(path.win32.basename("C:"), "")
        expect.equal(path.win32.basename("C:."), ".")
        expect.equal(path.win32.basename("C:\\"), "")
        expect.equal(path.win32.basename("C:\\dir\\base.ext"), "base.ext")
        expect.equal(path.win32.basename("C:\\basename.ext"), "basename.ext")
        expect.equal(path.win32.basename("C:basename.ext"), "basename.ext")
        expect.equal(path.win32.basename("C:basename.ext\\"), "basename.ext")
        expect.equal(path.win32.basename("C:basename.ext\\\\"), "basename.ext")
        expect.equal(path.win32.basename("C:foo"), "foo")
        expect.equal(path.win32.basename("file:stream"), "file:stream")
    end)
    nester.it("posix.basename", function()
        expect.equal(path.posix.basename("\\dir\\basename.ext"), "\\dir\\basename.ext")
        expect.equal(path.posix.basename("\\basename.ext"), "\\basename.ext")
        expect.equal(path.posix.basename("basename.ext"), "basename.ext")
        expect.equal(path.posix.basename("basename.ext\\"), "basename.ext\\")
        expect.equal(path.posix.basename("basename.ext\\\\"), "basename.ext\\\\")
        expect.equal(path.posix.basename("foo"), "foo")
        local controlCharFilename = "Icon"..string.char(13)
        expect.equal(path.posix.basename("/a/b/"..controlCharFilename), controlCharFilename)
    end)
    nester.it("posix.dirname", function()
        expect.equal(path.posix.dirname("/a/b/"), "/a")
        expect.equal(path.posix.dirname("/a/b"), "/a")
        expect.equal(path.posix.dirname("/a"), "/")
        expect.equal(path.posix.dirname(""), ".")
        expect.equal(path.posix.dirname("/"), "/")
        expect.equal(path.posix.dirname("////"), "/")
        expect.equal(path.posix.dirname("//a"), "//")
        expect.equal(path.posix.dirname("foo"), ".")
    end)
    nester.it("win32.dirname", function()
        expect.equal(path.win32.dirname("c:\\"), "c:\\")
        expect.equal(path.win32.dirname("c:\\foo"), "c:\\")
        expect.equal(path.win32.dirname("c:\\foo\\"), "c:\\")
        expect.equal(path.win32.dirname("c:\\foo\\bar"), "c:\\foo")
        expect.equal(path.win32.dirname("c:\\foo\\bar\\"), "c:\\foo")
        expect.equal(path.win32.dirname("c:\\foo\\bar\\baz"), "c:\\foo\\bar")
        expect.equal(path.win32.dirname("c:\\foo bar\\baz"), "c:\\foo bar")
        expect.equal(path.win32.dirname("\\"), "\\")
        expect.equal(path.win32.dirname("\\foo"), "\\")
        expect.equal(path.win32.dirname("\\foo\\"), "\\")
        expect.equal(path.win32.dirname("\\foo\\bar"), "\\foo")
        expect.equal(path.win32.dirname("\\foo\\bar\\"), "\\foo")
        expect.equal(path.win32.dirname("\\foo\\bar\\baz"), "\\foo\\bar")
        expect.equal(path.win32.dirname("\\foo bar\\baz"), "\\foo bar")
        expect.equal(path.win32.dirname("c:"), "c:")
        expect.equal(path.win32.dirname("c:foo"), "c:")
        expect.equal(path.win32.dirname("c:foo\\"), "c:")
        expect.equal(path.win32.dirname("c:foo\\bar"), "c:foo")
        expect.equal(path.win32.dirname("c:foo\\bar\\"), "c:foo")
        expect.equal(path.win32.dirname("c:foo\\bar\\baz"), "c:foo\\bar")
        expect.equal(path.win32.dirname("c:foo bar\\baz"), "c:foo bar")
        expect.equal(path.win32.dirname("file:stream"), ".")
        expect.equal(path.win32.dirname("dir\\file:stream"), "dir")

        expect.equal(path.win32.dirname("\\\\unc\\share"), "\\\\unc\\share")
        expect.equal(path.win32.dirname("\\\\unc\\share\\foo"), "\\\\unc\\share\\")
        expect.equal(path.win32.dirname("\\\\unc\\share\\foo\\"), "\\\\unc\\share\\")
        expect.equal(path.win32.dirname("\\\\unc\\share\\foo\\bar"), "\\\\unc\\share\\foo")
        expect.equal(path.win32.dirname("\\\\unc\\share\\foo\\bar\\"), "\\\\unc\\share\\foo")
        expect.equal(path.win32.dirname("\\\\unc\\share\\foo\\bar\\baz"), "\\\\unc\\share\\foo\\bar")
        expect.equal(path.win32.dirname("/a/b/"), "/a")
        expect.equal(path.win32.dirname("/a/b"), "/a")
        expect.equal(path.win32.dirname("/a"), "/")
        expect.equal(path.win32.dirname(""), ".")
        expect.equal(path.win32.dirname("/"), "/")
        expect.equal(path.win32.dirname("////"), "/")
        expect.equal(path.win32.dirname("foo"), ".")
    end)
end)
