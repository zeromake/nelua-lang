local path = require 'path'
require 'nester'

nester.describe("path", function()
    nester.it("basename", function()
        expect.equal(path.basename("path.nelua"), "path.nelua")
        expect.equal(path.basename("path.nelua", false), "path")
        expect.equal(path.basename(".nelua", false), "")
        expect.equal(path.basename("nelua", false), "nelua")
        expect.equal(path.basename("file.js.old", false), "file.js")
        expect.equal(path.basename(""), "")
        expect.equal(path.basename("/dir/basename.ext"), "basename.ext")
        expect.equal(path.basename("/basename.ext"), "basename.ext")
        expect.equal(path.basename("basename.ext"), "basename.ext")
        expect.equal(path.basename("basename.ext/"), "basename.ext")
        expect.equal(path.basename("basename.ext//"), "basename.ext")
    end)
    nester.it("win32.basename", function()
        expect.equal(path.win32.basename("\\dir\\basename.ext"), "basename.ext")
        expect.equal(path.win32.basename("\\basename.ext"), "basename.ext")
        expect.equal(path.win32.basename("basename.ext"), "basename.ext")
        expect.equal(path.win32.basename("basename.ext\\\\"), "basename.ext")
        expect.equal(path.win32.basename("foo"), "foo")
        expect.equal(path.win32.basename("aaa\\bbb"), "bbb")
        expect.equal(path.win32.basename("aaa\\bbb\\\\\\\\"), "bbb")
        expect.equal(path.win32.basename("C:"), "")
        expect.equal(path.win32.basename("C:."), ".")
        expect.equal(path.win32.basename("C:\\"), "")
        expect.equal(path.win32.basename("C:\\dir\\base.ext"), "base.ext")
        expect.equal(path.win32.basename("C:\\basename.ext"), "basename.ext")
        expect.equal(path.win32.basename("C:basename.ext"), "basename.ext")
        expect.equal(path.win32.basename("C:basename.ext\\"), "basename.ext")
        expect.equal(path.win32.basename("C:basename.ext\\\\"), "basename.ext")
        expect.equal(path.win32.basename("C:foo"), "foo")
        expect.equal(path.win32.basename("file:stream"), "file:stream")
    end)
    nester.it("posix.basename", function()
        expect.equal(path.posix.basename("\\dir\\basename.ext"), "\\dir\\basename.ext")
        expect.equal(path.posix.basename("\\basename.ext"), "\\basename.ext")
        expect.equal(path.posix.basename("basename.ext"), "basename.ext")
        expect.equal(path.posix.basename("basename.ext\\"), "basename.ext\\")
        expect.equal(path.posix.basename("basename.ext\\\\"), "basename.ext\\\\")
        expect.equal(path.posix.basename("foo"), "foo")
        local controlCharFilename = "Icon"..string.char(13)
        expect.equal(path.posix.basename("/a/b/"..controlCharFilename), controlCharFilename)
    end)
end)
